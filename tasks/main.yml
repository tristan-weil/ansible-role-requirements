---

#
# we don't need facts
#
- name: 'install minimal ansible python libs'
  raw: |
    if [ $(uname) = "Linux" ]; then
      if [ -f /etc/debian_version ]; then
        apt-get -y update && apt-get -y \
          -o "APT::Install-Recommends=false" \
          -o "APT::Install-Suggests=false" \
          install {{ _requirements_default_packages_by_os_family['Debian'] | union(requirements_packages['Debian']) | join(' ') }}
      fi
    elif [ $(uname) = "OpenBSD" ]; then
      pkg_add -I {{ _requirements_default_packages_by_os_family['OpenBSD'] | union(requirements_packages['OpenBSD']) | join(' ') }}
      ln -sf /usr/local/bin/python3 /usr/local/bin/python
      ln -sf /usr/local/bin/python3 /usr/local/bin/python2
      ln -sf /usr/local/bin/python3-config /usr/local/bin/python-config
      ln -sf /usr/local/bin/python3-config /usr/local/bin/python2-config
    fi
  changed_when: False

#
# we need facts now
#
- name: 'force ansible to regather facts'
  setup:

#
# create ansible user
#
- block:
    - name: 'create ansible user'
      user:
        name: 'ansible'
        home: "{{ requirements_ansible_home }}"
        system: True

    - name: 'add ssh authorized keys'
      authorized_key:
        user: 'ansible'
        key: "{{ item.key }}"
        key_options: "{{ item.key_options | default(omit) }}"
        exclusive: False
      loop: "{{ requirements_ansible_ssh_authorized_keys | default([]) }}"

    - import_role:
        name: 'ansible-role-privesc'
      vars:
        privesc_configs_list:
          - name: 'ansible'
            state: 'present'
            rules:
              - from: 'ansible'
                nopasswd: True

  when: requirements_ansible_ssh_authorized_keys | default([]) | length > 0
